%To implement Semantic Networks (ATN/RTN). 
class(person). 
class(male). 
class(female). 
class(height).
class(weight). 
class(age). 
Is_a(male,person).
Is_a(female,person). 
Is_a(jane,female). 
Is_a(john,male). 
Is_a(david,male). 
owns(john,house). 
owns(jane,house). 
owns(david,car). 
Has_prop(person,[height,weight,age]).
Has(john,height,171). 
has(john,weight,70). 
has(john,age,31). 
has(jane,height,154). 
has(jane,weight,49). 
has(jane,age,24). 
has(david,height,167). 
has(david,weight,69).
has(david,age,28). 
Is_person(X):-is_a(X,person),!. 
Is_person(X):-is_a(Y,person),is_a(X,Y). 
get_prop(X,[H|[]],P):-has(X,H,Y),append([],[Y],P).
get_prop(X,[H|T],P):-get_prop(X,T,P1),has(X,H,Y),append([Y],P1,P). 
prop_of(X,P):-is_person(X),has_prop(person,P1),get_prop(X,P1,P),!. 
hascar(X1):-is_person(X1),\+(class(X1)),owns(X1,car).